# -*- mode: snippet -*-
#name : dioxus-page
#key : dioxus-page
#contributor : hackartist
# --

use bdk::prelude::*;
use super::*;
use i18n::*;
use controller::*;

#[component]
pub fn `(let* (
                (dirs (split-string (file-name-directory buffer-file-name) "/"))
                (nested_dir (nth (- (length dirs) 2) dirs))
                (parent_dir (nth (- (length dirs) 3) dirs))
                (name (if (string-prefix-p "_" nested_dir)
                        (concat parent_dir "_by" nested_dir)
                        (if (string-equal nested_dir "new")
                            (concat parent_dir "_new")
                            nested_dir)))
                (upper-camel-name (string-inflection-upper-camelcase-function name)))
                (concat upper-camel-name "Page"))`(
    `(let* (
    (dirs (split-string (file-name-directory buffer-file-name) "/"))
    (nested_dir (nth (- (length dirs) 2) dirs))
    (contain_underscore (string-prefix-p "_" nested_dir))
    (is_new (string-prefix-p "new" nested_dir))
    (varname (string-inflection-underscore-function nested_dir)))
    (if contain_underscore
    (concat (replace-regexp-in-string "^_" "" varname) ": i64,")
      (if is_new  "id: Option<i64>," "")))`
    #[props(default = Language::En)] lang: Language,
) -> Element {
    let mut _ctrl = Controller::new(lang)?;
    let tr: `(let* (
    (dirs (split-string (file-name-directory buffer-file-name) "/"))
    (nested_dir (nth (- (length dirs) 2) dirs))
    (parent_dir (nth (- (length dirs) 3) dirs))
    (name (if (string-prefix-p "_" nested_dir)
    (concat parent_dir "_by" nested_dir)
    (if (string-equal nested_dir "new")
                            (concat parent_dir "_new")
                            nested_dir)))
    (upper-camel-name (string-inflection-upper-camelcase-function name)))
    (concat upper-camel-name "Translate"))` = translate(&lang);

    rsx! {
    by_components::meta::MetaPage { title: tr.title }

    div { id: "`(let* (
    (dirs (split-string (file-name-directory buffer-file-name) "/"))
    (nested_dir (nth (- (length dirs) 2) dirs))
    (parent_dir (nth (- (length dirs) 3) dirs))
    (name (if (string-prefix-p "_" nested_dir)
    (concat parent_dir "_by" nested_dir)
    (if (string-equal nested_dir "new")
                            (concat parent_dir "_new")
                            nested_dir)))
    (kebab-name (string-inflection-kebab-case-function name)))
    kebab-name)`", "{tr.title} PAGE" } // end of this page
    }
}
