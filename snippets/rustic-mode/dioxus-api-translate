# -*- mode: snippet -*-
#name : dioxus-api-translate
#key : dioxus-api-translate
#contributor : hackartist
# --
use dioxus::prelude::*;
use serde::{Deserialize, Serialize};

use crate::utils::context::Language;

#[derive(Serialize, Deserialize, Clone, Debug)]
pub struct ${1:$(string-inflection-upper-camelcase-function yas-text)}Translate {
}

#[server(endpoint = "/translates/$1")]
pub async fn translate_${1:pages}(lang: Language) -> Result<${1:$(string-inflection-upper-camelcase-function yas-text)}Translate, ServerFnError> {
    Ok(if lang == Language::En {
        ${1:$(string-inflection-upper-camelcase-function yas-text)}Translate {
        }
    } else {
        ${1:$(string-inflection-upper-camelcase-function yas-text)}Translate {
        }
    })
}
