# -*- mode: snippet -*-
#name : dioxus-full-component
#key : dioxus-full-component
#contributor : hackartist
# --

#![allow(non_snake_case)]
use dioxus::prelude::*;
use dioxus_translate::*;

#[component]
pub fn `(string-inflection-upper-camelcase-function (string-replace ".rs" "" (buffer-name)))`(
lang: Language,
    #[props(extends = GlobalAttributes)]
    attributes: Vec<Attribute>,
    children: Element,
) -> Element {
let tr: `(string-inflection-upper-camelcase-function (string-replace ".rs" "" (buffer-name)))`Translate = translate(&lang);

    rsx! {
    div { id: "`(string-inflection-kebab-case-function (string-replace ".rs" "" (buffer-name)))`", ..attributes, {tr.title} {children} }
    }
    }


translate! {
`(string-inflection-upper-camelcase-function (string-replace ".rs" "" (buffer-name)))`Translate;

    title: {
    ko: "`(string-inflection-upper-camelcase-function (string-replace ".rs" "" (buffer-name)))`",
    en: "`(string-inflection-upper-camelcase-function (string-replace ".rs" "" (buffer-name)))`",
    },
}