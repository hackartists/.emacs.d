# -*- mode: snippet -*-
#name : dioxus-api-with-import
#key : dioxus-api-with-import
#contributor : hackartist
# --

#![allow(unused_imports)]
use dioxus::prelude::{
    server_fn::codec::{PostUrl, GetUrl, Json},
    *,
};

#[derive(Debug, Clone, Eq, PartialEq, Serialize, Deserialize)]
pub struct ${2:$(string-inflection-upper-camelcase-function yas-text)}Request {}

#[derive(Debug, Clone, Eq, PartialEq, Serialize, Deserialize)]
pub struct ${2:$(string-inflection-upper-camelcase-function yas-text)}Response {}

#[server(endpoint = "${1:/path}", input = PostUrl, output = Json)]
pub async fn ${2:function_name}(req: ${2:$(string-inflection-upper-camelcase-function yas-text)}Request) -> Result<${2:$(string-inflection-upper-camelcase-function yas-text)}Response, ServerFnError> {
    tracing::debug!("$1: {:?}", req);
    $0
    Err(ServerFnError::ServerError("not implemented yet".to_string()))
}