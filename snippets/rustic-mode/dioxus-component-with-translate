# -*- mode: snippet -*-
#name : dioxus-component-with-translate
#key : dioxus-component-with-translate
#contributor : hackartist
# --

#![allow(non_snake_case)]
use crate::prelude::*;
use dioxus::prelude::*;
use serde::{Deserialize, Serialize};

#[component]
pub fn ${1:PageName}Page() -> Element {
    let lang = use_lang();
    let translates = translate_${1:$(string-inflection-underscore-function yas-text)}(lang);

    rsx! {
      div { "{translates.title} page" }
    }
}

#[derive(Serialize, Deserialize, Clone, Debug)]
pub struct ${1:$(string-inflection-upper-camelcase-function yas-text)}Translate {
    title: String,
}

pub fn translate_${1:$(string-inflection-underscore-function yas-text)}(_lang: Language) -> ${1:$(string-inflection-upper-camelcase-function yas-text)}Translate {
      ${1:$(string-inflection-upper-camelcase-function yas-text)}Translate {
          title: "$1".to_string(),
      }
}
